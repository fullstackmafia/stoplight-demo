openapi: 3.0.0
info:
  title: openweathermap
  version: '1.0'
  description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
  contact:
    name: Support
    url: 'https://openweathermap.org/api'
    email: some_email@gmail.com
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  coord:
                    type: object
                    properties:
                      lon:
                        type: number
                      lat:
                        type: number
                  weather:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        main:
                          type: string
                          minLength: 1
                        description:
                          type: string
                          minLength: 1
                        icon:
                          type: string
                          minLength: 1
                  base:
                    type: string
                    minLength: 1
                  main:
                    type: object
                    properties:
                      temp:
                        type: number
                      feels_like:
                        type: number
                      temp_min:
                        type: number
                      temp_max:
                        type: number
                      pressure:
                        type: number
                      humidity:
                        type: number
                  visibility:
                    type: number
                  wind:
                    type: object
                    properties:
                      speed:
                        type: number
                      deg:
                        type: number
                  clouds:
                    type: object
                    required:
                      - all
                    properties:
                      all:
                        type: number
                  dt:
                    type: number
                  sys:
                    type: object
                    required:
                      - type
                      - id
                      - country
                      - sunrise
                      - sunset
                    properties:
                      type:
                        type: number
                      id:
                        type: number
                      country:
                        type: string
                        minLength: 1
                      sunrise:
                        type: number
                      sunset:
                        type: number
                  timezone:
                    type: number
                    description: |
                      The timezone for the station
                  id:
                    type: number
                  name:
                    type: string
                    minLength: 1
                  cod:
                    type: number
                required:
                  - clouds
                  - dt
                  - sys
                  - timezone
                  - id
                  - name
                  - cod
              examples:
                example:
                  value:
                    coord:
                      lon: 0
                      lat: 0
                    weather:
                      - id: 0
                        main: string
                        description: string
                        icon: string
                    base: string
                    main:
                      temp: 0
                      feels_like: 0
                      temp_min: 0
                      temp_max: 0
                      pressure: 0
                      humidity: 0
                    visibility: 0
                    wind:
                      speed: 0
                      deg: 0
                    clouds:
                      all: 0
                    dt: 0
                    sys:
                      type: 0
                      id: 0
                      country: string
                      sunrise: 0
                      sunset: 0
                    timezone: 0
                    id: 0
                    name: string
                    cod: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
              examples:
                example:
                  value:
                    cod: 0
                    message: string
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-weather
      description: 'Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.'
      parameters:
        - schema:
            type: string
          in: query
          name: zip
          description: '**Zip code**. Search by zip code. *Example: 95050,us*. Please note that if the country is not specified, the search uses USA as a default.'
        - schema:
            type: string
            default: standard
            enum:
              - standard
              - metric
              - imperial
          in: query
          name: units
          description: '**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.'
        - schema:
            type: string
          in: query
          name: q
          description: '**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes.'
        - schema:
            type: string
          in: query
          description: '**City ID**. *Example: `2172797`*. You can call by city ID. The API responds with the exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in this parameter — just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs, it’s treated as 3 API calls.*'
          name: id
        - schema:
            type: string
          in: query
          name: lat
          description: '**Latitude**. *Example: 35*. The latitude coordinate of the location of your interest. Must use with `lon`.'
        - schema:
            type: string
          in: query
          name: lon
          description: '**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat `.'
        - schema:
            type: string
            default: en
          in: query
          name: lang
          description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
        - schema:
            type: string
            default: json
          in: query
          name: mode
          description: '**Mode*. *Example: html. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default.'
    parameters: []
  /forecast/hourly:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cod:
                    type: string
                  message:
                    type: number
                  cnt:
                    type: number
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        dt:
                          type: number
                        main:
                          type: object
                          properties:
                            temp:
                              type: number
                            feels_like:
                              type: number
                            temp_min:
                              type: number
                            temp_max:
                              type: number
                            pressure:
                              type: number
                            sea_level:
                              type: number
                            grnd_level:
                              type: number
                            humidity:
                              type: number
                            temp_kf:
                              type: number
                            '':
                              type: string
                        weather:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: number
                              main:
                                type: string
                              description:
                                type: string
                              icon:
                                type: string
                        clouds:
                          type: object
                          properties:
                            all:
                              type: number
                        wind:
                          type: object
                          properties:
                            speed:
                              type: number
                            deg:
                              type: number
                        pop:
                          type: number
                        sys:
                          type: object
                          properties:
                            pod:
                              type: string
                        dt_txt:
                          type: string
                  city:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                      coord:
                        type: object
                        properties:
                          lat:
                            type: number
                          lon:
                            type: number
                      country:
                        type: string
                      timezone:
                        type: number
                      sunrise:
                        type: number
                      sunset:
                        type: number
                  '':
                    type: string
              examples:
                example:
                  value:
                    cod: '200'
                    message: 0.0179
                    cnt: 96
                    list:
                      - dt: 1596632400
                        main:
                          temp: 289.16
                          feels_like: 288.41
                          temp_min: 289.16
                          temp_max: 289.16
                          pressure: 1013
                          sea_level: 1013
                          grnd_level: 1010
                          humidity: 78
                          temp_kf: 0
                        weather:
                          - id: 804
                            main: Clouds
                            description: overcast clouds
                            icon: 04n
                        clouds:
                          all: 100
                        wind:
                          speed: 2.03
                          deg: 252
                        visibility: 10000
                        pop: 0.04
                        sys:
                          pod: 'n'
                        dt_txt: '2020-08-05 13:00:00'
                    city:
                      id: 2643743
                      name: London
                      coord:
                        lat: 51.5085
                        lon: -0.1258
                      country: GB
                      timezone: 0
                      sunrise: 1568958164
                      sunset: 1569002733
      operationId: get-forecast-hourly
      description: 'With this endpoint, you can access the hourly forecast of a city for up to 4 days with data every hour. All data can be stored in JSON and XML formats.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                me:
                  type: string
            examples:
              example:
                value: {}
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: '**City name**. *Example: Munich*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes'
          required: true
        - schema:
            type: string
            enum:
              - json
              - xml
          in: query
          name: mode
          description: Date format. Possible values are JSON and XML
        - schema:
            type: string
          in: query
          name: cnt
          description: '**Cities in circle**. *Example: `5`*. You can use the cnt parameter to get the number of cities within a definite circle which is specified by the lat, long and expected number of cities. '
        - schema:
            type: string
          in: query
          name: lang
          description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
        - schema:
            type: string
          in: query
          name: lat
          description: '**Latitude**. *Example: 47*. Latitude coordinate of the location of your interest. Must use with `lon `.'
        - schema:
            type: string
          in: query
          description: '**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat `.'
          name: lon
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    unauthorized_response:
      title: unauthorized_response
      type: object
      properties:
        cod:
          type: integer
        message:
          type: string
      required:
        - cod
        - message
  securitySchemes:
    app_id:
      type: apiKey
      in: query
      name: appid
